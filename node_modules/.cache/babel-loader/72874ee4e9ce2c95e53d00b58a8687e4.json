{"ast":null,"code":"import _objectSpread from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bjlu/projects/countdown/src/Weather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Weather =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather() {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Weather).call(this, props));\n\n    _this.getMumbaiWeather = function () {\n      axios.get('https://api.openweathermap.org/data/2.5/weather?q=Mumbai&appid=1ebf0b62e0e74a698ca5939c772a568e').then(function (response) {\n        console.log(response);\n        this.setState(_objectSpread({}, this.state, {\n          mumbai: _objectSpread({}, mumbai, {\n            temp: 5,\n            desc: \"hot\"\n          })\n        }));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      mumbai: {\n        temp: 0,\n        desc: \"\"\n      },\n      stockholm: {\n        temp: 0,\n        desc: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMumbaiWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"V\\xE4der\");\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/bjlu/projects/countdown/src/Weather.js"],"names":["React","Component","axios","Weather","props","getMumbaiWeather","get","then","response","console","log","setState","state","mumbai","temp","desc","catch","error","stockholm"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,O;;;;;AAEF,qBAAc;AAAA;;AAAA;;AACV,iFAAMC,KAAN;;AADU,UAkBdC,gBAlBc,GAkBK,YAAM;AACrBH,MAAAA,KAAK,CAACI,GAAN,CAAU,iGAAV,EACKC,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,QAAL,mBACO,KAAKC,KADZ;AAEIC,UAAAA,MAAM,oBACCA,MADD;AAEFC,YAAAA,IAAI,EAAE,CAFJ;AAGFC,YAAAA,IAAI,EAAE;AAHJ;AAFV;AAQH,OAXL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,OAdL;AAeH,KAlCa;;AAEV,UAAKL,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,IAAI,EAAE;AAFF,OADD;AAKPG,MAAAA,SAAS,EAAE;AACPJ,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,IAAI,EAAE;AAFC;AALJ,KAAX;AAFU;AAYb;;;;wCAEmB;AAChB,WAAKV,gBAAL;AACH;;;6BAoBQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;;;;EA7CiBJ,S;;AAgDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Weather extends Component {\n\n    constructor() {\n        super(props)\n        this.state={\n            mumbai: {\n                temp: 0,\n                desc: \"\"\n            },\n            stockholm: {\n                temp: 0,\n                desc: \"\"\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getMumbaiWeather();\n    }\n\n    getMumbaiWeather = () => {\n        axios.get('https://api.openweathermap.org/data/2.5/weather?q=Mumbai&appid=1ebf0b62e0e74a698ca5939c772a568e')\n            .then(function (response) {\n                console.log(response);\n                this.setState({\n                    ...this.state, \n                    mumbai: {\n                        ...mumbai, \n                        temp: 5,\n                        desc: \"hot\"\n                    }\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n\n        return (\n            <div>\n                VÃ¤der\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}