{"ast":null,"code":"import _classCallCheck from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/bjlu/projects/countdown/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/bjlu/projects/countdown/src/ProgressBar.js\";\nimport React, { Component } from 'react';\n\nvar ProgressBarExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProgressBarExample, _Component);\n\n  function ProgressBarExample(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBarExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressBarExample).call(this, props));\n    _this.state = {\n      percentage: 0\n    };\n    _this.nextStep = _this.nextStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProgressBarExample, [{\n    key: \"nextStep\",\n    value: function nextStep() {\n      if (this.state.percentage === 100) return;\n      this.setState({\n        percentage: this.state.percentage + 20\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        percentage: this.state.percentage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.nextStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Next Step\")), React.createElement(\"div\", {\n        style: {\n          marginTop: '10px',\n          color: 'blue',\n          marginBottom: '15px'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            percentage: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return ProgressBarExample;\n}(Component);\n\nvar ProgressBar = function ProgressBar(props) {\n  return React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Filler, {\n    percentage: props.percentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nvar Filler = function Filler(props) {\n  return React.createElement(\"div\", {\n    className: \"filler\",\n    style: {\n      width: \"\".concat(props.percentage, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/bjlu/projects/countdown/src/ProgressBar.js"],"names":["React","Component","ProgressBarExample","props","state","percentage","nextStep","bind","setState","marginTop","color","marginBottom","ProgressBar","Filler","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,kB;;;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,4FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AANe;AAOlB;;;;+BAEU;AACP,UAAI,KAAKH,KAAL,CAAWC,UAAX,KAA0B,GAA9B,EAAmC;AACnC,WAAKG,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,GAAwB;AAAtC,OAAd;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAE,KAAKH,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAFJ,EASI;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,KAAK,EAAE,MAA5B;AAAoCC,UAAAA,YAAY,EAAE;AAAlD,SAAZ;AAAwE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,QAAL,CAAc;AAAEH,YAAAA,UAAU,EAAE;AAAd,WAAd,CAAN;AAAA,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADJ;AAeH;;;;EA/B4BJ,S;;AAkCjC,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACT,KAAD,EAAW;AAC3B,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,KAAK,CAACE,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;;AAQA,IAAMQ,MAAM,GAAG,SAATA,MAAS,CAACV,KAAD,EAAW;AACtB,SAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,YAAKX,KAAK,CAACE,UAAX;AAAP,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAFD;;AAIA,eAAeO,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ProgressBarExample extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            percentage: 0\n        }\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    nextStep() {\n        if (this.state.percentage === 100) return\n        this.setState({ percentage: this.state.percentage + 20 })\n    }\n\n    render() {\n        return (\n            <div>\n                <ProgressBar percentage={this.state.percentage} />\n                <div style={{ marginTop: '20px' }}>\n                    <button\n                        onClick={this.nextStep}\n                    >\n                        Next Step\n                 </button>\n                </div>\n                <div style={{ marginTop: '10px', color: 'blue', marginBottom: '15px' }} onClick={() => this.setState({ percentage: 0 })}>\n                    Reset\n                </div>\n            </div>\n        )\n    }\n}\n\nconst ProgressBar = (props) => {\n    return (\n        <div className=\"progress-bar\">\n            <Filler percentage={props.percentage} />\n        </div>\n    )\n}\n\nconst Filler = (props) => {\n    return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n}\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}